--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v69=v2(v0(v30,16));if v19 then local v76=v5(v69,v19);v19=nil;return v76;else return v69;end end end);local function v20(v31,v32,v33)if v33 then local v70=0 -0 ;local v71;while true do if ((0 -0)==v70) then v71=(v31/(2^(v32-1)))%((1439 -(816 + 621))^(((v33-((1 + 2) -2)) -(v32-(1622 -(364 + 1257)))) + 1 + (1516 -(277 + 1239)))) ;return v71-(v71%(1 + 0)) ;end end else local v72=(4 -2)^(v32-(1912 -(1907 + 4))) ;return (((v31%(v72 + v72))>=v72) and (3 -2)) or (1409 -(696 + 713)) ;end end local function v21()local v34=0;local v35;while true do if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + (589 -(323 + 265)) ;v34=1946 -(160 + 604 + 1181) ;end if (v34==(4 -3)) then return v35;end end end local function v22()local v36=0 + 0 ;local v37;local v38;while true do if (v36==(0 + (0 -0))) then v37,v38=v1(v16,v18,v18 + (1857 -(1533 + 322)) );v18=v18 + 1 + 1 ;v36=1 + 0 ;end if (v36==1) then return (v38 * (186 + 70)) + v37 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + (935 -(91 + 841)) );v18=v18 + (7 -4) + 1 ;return (v42 * (16777848 -(368 + 264))) + (v41 * (65741 -(28 + 177))) + (v40 * (98 + 158)) + v39 ;end local function v24()local v43=79 -(11 + 68) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(0 + 0 + 0)) then v44=v23();v45=v23();v43=1;end if (v43==(1123 -(266 + 856))) then v46=(881 -(255 + 625)) + (0 -0) ;v47=(v20(v45,1,39 -19 ) * ((1 + 1)^32)) + v44 ;v43=2 + 0 ;end if (v43==(4 -2)) then v48=v20(v45,52 -31 ,89 -58 );v49=((v20(v45,1633 -(1368 + 151 + 82) )==(982 -(909 + 72))) and  -(1885 -(96 + 1788))) or 1 ;v43=5 -2 ;end if (v43==(6 -3)) then if (v48==(0 + 0)) then if (v47==(1534 -(602 + 932))) then return v49 * (0 + 0) ;else v48=1;v46=0 -0 ;end elseif (v48==(3163 -(383 + 733))) then return ((v47==((206 + 9) -(190 + 25))) and (v49 * ((1 -0)/(0 + 0)))) or (v49 * NaN) ;end return v8(v49,v48-((4960 -(154 + 1806)) -(458 + 1519)) ) * (v46 + (v47/((2 + 0)^(27 + (65 -40))))) ;end end end local function v25(v50)local v51=0 + 0 ;local v52;local v53;while true do if (v51==2) then v53={};for v77=1 -0 , #v52 do v53[v77]=v2(v1(v3(v52,v77,v77)));end v51=1618 -((821 -580) + 1374) ;end if (v51==(0 -0)) then v52=nil;if  not v50 then v50=v23();if (v50==(1085 -(188 + 897))) then return "";end end v51=2 -1 ;end if (v51==(1 + 0 + 0)) then v52=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;v51=(1691 + 102) -(1234 + 315 + 242) ;end if (v51==(1 + 2)) then return v6(v53);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0 + 0 ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54==(3 -2)) then v57=nil;v58=nil;v54=2 + 0 ;end if (v54==(1 + 2)) then v61=nil;while true do local v79=633 -(408 + 225) ;while true do if (v79~=(1 + 0)) then else if (v55~=(1 + 0)) then else local v104=0 -0 ;local v105;while true do if (v104~=0) then else v105=564 -(332 + 232) ;while true do if ((350 -(193 + 156))==v105) then v61={};v55=2;break;end if (v105~=(0 + 0)) then else v59={v56,v57,nil,v58};v60=v23();v105=2 -1 ;end end break;end end end if (v55==(2 + 0)) then local v106=0 + 0 ;while true do if (v106~=(200 -(84 + 115))) then else for v112=1625 -(1588 + 36) ,v23() do local v113=0 -0 ;local v114;local v115;while true do if (v113==0) then v114=0 -0 ;v115=nil;v113=549 -(336 + 212) ;end if (v113~=(1 + 0)) then else while true do if (v114~=(0 -0)) then else v115=v21();if (v20(v115,1,1)==(0 -0)) then local v131=0 -0 ;local v132;local v133;local v134;local v135;while true do if (v131==2) then while true do if (v132==(1754 -(827 + 926))) then local v184=0;while true do if (v184~=(1 + 0)) then else v132=2 -0 ;break;end if (v184~=(0 + 0)) then else local v265=0;while true do if (v265~=(1 + 0)) then else v184=1 -0 ;break;end if (v265==0) then v135={v22(),v22(),nil,nil};if (v133==(0 -0)) then local v306=0 + 0 ;local v307;local v308;while true do if (v306==1) then while true do if ((1142 -(555 + 587))==v307) then v308=1822 -(821 + 1001) ;while true do if (v308~=(0 + 0)) then else v135[3]=v22();v135[2 + 2 ]=v22();break;end end break;end end break;end if (v306==(0 + 0)) then v307=788 -(383 + 405) ;v308=nil;v306=3 -2 ;end end elseif (v133==(1 + 0)) then v135[3 + 0 ]=v23();elseif (v133==(2 + 0)) then v135[3 + 0 ]=v23() -((300 -(90 + 208))^(10 + 6)) ;elseif (v133~=3) then else local v349=0;local v350;local v351;while true do if ((1150 -(36 + 1113))~=v349) then else while true do if (v350==(0 -0)) then v351=0;while true do if ((0 -0)==v351) then v135[3 -0 ]=v23() -((1 + 1)^16) ;v135[4]=v22();break;end end break;end end break;end if (v349==(1924 -(819 + 1105))) then v350=855 -(589 + 266) ;v351=nil;v349=1 + 0 ;end end end v265=2 -1 ;end end end end end if ((2 + 0)==v132) then local v185=0 + 0 ;local v186;while true do if (v185==(0 -0)) then v186=0 -0 ;while true do if (v186~=(1 -0)) then else v132=2 + 1 ;break;end if (v186~=(0 + 0)) then else local v285=0;while true do if (v285~=1) then else v186=509 -(78 + 430) ;break;end if (v285==(204 -(138 + 66))) then if (v20(v134,1075 -(96 + 978) ,1)~=1) then else v135[381 -(305 + 74) ]=v61[v135[1074 -(23 + 1049) ]];end if (v20(v134,821 -(455 + 364) ,480 -(444 + 34) )~=(4 -3)) then else v135[3 + 0 ]=v61[v135[11 -8 ]];end v285=2 -1 ;end end end end break;end end end if (v132==3) then if (v20(v134,3 -0 ,3)~=(4 -3)) then else v135[8 -4 ]=v61[v135[7 -3 ]];end v56[v112]=v135;break;end if (v132==(0 + 0)) then local v188=0 + 0 ;local v189;while true do if ((1097 -(427 + 670))==v188) then v189=0;while true do if (v189==1) then v132=1;break;end if (v189==(0 + 0)) then local v286=0 -0 ;while true do if (v286~=(1556 -(835 + 720))) then else v189=1312 -(240 + 1071) ;break;end if (v286==(0 + 0)) then v133=v20(v115,2,592 -(408 + 181) );v134=v20(v115,4 + 0 ,4 + 2 );v286=1 + 0 ;end end end end break;end end end end break;end if ((0 -0)~=v131) then else v132=0;v133=nil;v131=1026 -(880 + 145) ;end if (v131==(1 + 0)) then v134=nil;v135=nil;v131=4 -2 ;end end end break;end end break;end end end v55=8 -5 ;break;end if (v106==(0 + 0)) then for v116=1764 -(618 + 1145) ,v60 do local v117=0 + 0 ;local v118;local v119;local v120;local v121;while true do if (v117==(1648 -(833 + 813))) then while true do if (v118~=(1 -0)) then else v121=nil;while true do if (v119~=0) then else local v137=0;local v138;while true do if (v137==0) then v138=0 + 0 ;while true do if (v138~=(2 -1)) then else v119=1;break;end if (v138~=(0 -0)) then else local v253=0 + 0 ;while true do if (v253~=(3 -2)) then else v138=951 -(326 + 624) ;break;end if (v253~=(0 + 0)) then else v120=v21();v121=nil;v253=1;end end end end break;end end end if (v119~=1) then else if (v120==1) then v121=v21()~=(0 + 0) ;elseif (v120==(4 -2)) then v121=v24();elseif (v120==(12 -9)) then v121=v25();end v61[v116]=v121;break;end end break;end if (v118==(0 + 0)) then local v126=0;while true do if (v126~=0) then else v119=1731 -(1596 + 135) ;v120=nil;v126=1 + 0 ;end if (v126==(2 -1)) then v118=1 -0 ;break;end end end end break;end if (v117~=(1210 -(523 + 686))) then else v120=nil;v121=nil;v117=2 + 0 ;end if (v117==0) then v118=0 + 0 ;v119=nil;v117=2 -1 ;end end end v59[1431 -(104 + 1324) ]=v21();v106=1304 -(120 + 1183) ;end end end break;end if (v79~=(0 -0)) then else if (v55~=(3 + 0)) then else local v107=450 -(45 + 405) ;local v108;while true do if (v107~=0) then else v108=0;while true do local v122=0;while true do if (v122~=(0 + 0)) then else if (v108~=(2 -1)) then else return v59;end if (v108~=(1374 -(887 + 487))) then else for v127=1542 -(1330 + 211) ,v23() do v57[v127-(3 -2) ]=v28();end for v129=4 -3 ,v23() do v58[v129]=v23();end v108=1;end break;end end end break;end end end if (v55==(637 -(539 + 98))) then local v109=1982 -(1101 + 881) ;local v110;while true do if (v109~=(1944 -(932 + 1012))) then else v110=1158 -(890 + 268) ;while true do if ((0 + 0)~=v110) then else local v123=0 -0 ;while true do if (v123~=(0 + 0)) then else v56={};v57={};v123=1;end if (v123==1) then v110=632 -(440 + 191) ;break;end end end if (v110==(1 + 0)) then v58={};v55=1 -0 ;break;end end break;end end end v79=1 + 0 ;end end end break;end if (2~=v54) then else v59=nil;v60=nil;v54=1139 -(254 + 882) ;end if (v54~=0) then else v55=298 -(219 + 79) ;v56=nil;v54=1 + 0 ;end end end local function v29(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end if (v65==1) then v68=v62[3];return function(...)local v80=1;local v81= -1;local v82={...};local v83=v12("#",...) -1 ;local function v84()local v85=v66;local v86=v67;local v87=v68;local v88=v27;local v89={};local v90={};local v91={};for v95=0 -0 ,v83 do if ((v95>=v87) or ((1718 -(679 + 710))>(5309 -(856 + 526)))) then v89[v95-v87 ]=v82[v95 + (3 -2) ];else v91[v95]=v82[v95 + ((2 -0) -(1 + 0)) ];end end local v92=(v83-v87) + 1 + 0 ;local v93;local v94;while true do local v96=0 + (0 -0) ;local v97;local v98;while true do if (((4452 -(66 + 247))>(2346 -(891 + 580))) and (v96==(1111 -(669 + 441)))) then while true do if ((v97==(869 -(610 + 259))) or ((1281 + 501 + 320)>(4822 -(112 + 771)))) then v98=0 -0 ;while true do if ((3805>(6499 -4703)) and (v98==(1 + 0))) then if ((v94<=(371 -(182 + 167))) or (((6432 + 3717) -5363)<=(3830 -(102 + 1045)))) then if ((479<4122) and (v94<=(232 -(32 + 190)))) then if ((v94<=4) or (909>(3969 -(109 + 626 + 968)))) then if ((v94<=(835 -(109 + 725))) or ((497 + 1551)==(3464 + 650))) then if ((v94==(0 + 0)) or ((1161 + 3490)<=(2042 + 1766))) then local v142=0 -0 ;local v143;local v144;local v145;while true do if ((4613<(1449 + 3475)) and (v142==(2 -1))) then v145=nil;while true do if (((16718 -12437)==(12642 -8361)) and (v143==(822 -(261 + 560)))) then while true do if ((v144==(0 -0)) or ((4147 -(3660 -1897))>=(1561 + 2906))) then v145=v93[1 + 1 + 0 ];v91[v145](v13(v91,v145 + (1644 -(346 + 410 + 887)) ,v93[(6 -4) + 1 ]));break;end end break;end if (((624 -(1031 -598))<=(3628 -(845 + 340))) and (v143==(1143 -(100 + 1043)))) then local v266=(1407 -(840 + 61)) -(224 + 282) ;while true do if (((0 -0)==v266) or ((4993 -(35 + 18))==(709 + 2092))) then v144=0;v145=nil;v266=1 + 0 ;end if (((1 -0)==v266) or ((1707 -(27 + (1871 -(1333 + 349))))>=((1648 + 2162) -(418 + 153)))) then v143=(1733 -(348 + 1384)) + 0 ;break;end end end end break;end if ((v142==(1446 -(271 + 1175))) or ((211 + 876)>3088)) then v143=0 -0 ;v144=nil;v142=3 -2 ;end end else local v146=0 + 0 ;local v147;local v148;while true do if (((182 + 87)<(14760 -10598)) and (v146==(1499 -(513 + 985)))) then while true do if ((v147==0) or ((4656 -2504)>=(424 + 3008))) then v148=v93[2];v91[v148](v91[v148 + ((3 -2) -0) ]);break;end end break;end if ((0==v146) or (223>(655 + 1845))) then v147=0 + 0 ;v148=nil;v146=1902 -(1644 + 257) ;end end end elseif ((v94<=(1831 -(150 + 1679))) or ((3530 -2418)>=1336)) then v91[v93[(4 + 4) -6 ]]={};elseif ((v94>((2318 -1617) -(234 + 464))) or ((3463 -2536)==(131 + 59 + 659))) then if (((10130 -5444)>(2657 -(160 + 93))) and v91[v93[6 -4 ]]) then v80=v80 + (1823 -(950 + 872)) ;else v80=v93[9 -6 ];end else v91[v93[514 -(376 + 32 + 104) ]]=v91[v93[3]]%v93[1 + 3 ] ;end elseif (((197 + 4789)==(19776 -14790)) and (v94<=(12 -5))) then if (((2086 + 449)>(836 + 467)) and (v94<=((2 + 10) -7))) then local v150=0 + 0 ;local v151;local v152;local v153;while true do if (((3169 -1652)<=4755) and (v150==((747 -479) -(174 + 94)))) then local v254=0 + 0 ;while true do if ((2935==(14533 -11598)) and (((880 + 664) -(590 + 953))==v254)) then v150=3 -2 ;break;end if ((v254==(0 -0)) or ((8532 -5167)>=(2560 + 1692))) then v151=v93[2];v152=v91[v151 + 2 ];v254=1 + 0 ;end end end if (((1558 -627)<=(120 + 837)) and (v150==(5 -3))) then if ((v152>((0 -0) + 0)) or (((2590 + 1092) -((1517 -(1175 + 323)) + 1575))>3670)) then if ((v153<=v91[v151 + (235 -(76 + 158)) ]) or (4544<=((15051 -9239) -1825))) then local v280=0 -0 ;local v281;local v282;while true do if ((v280==(1 -0)) or ((1066 + 3381)==3278)) then while true do if (((5463 -(623 + 138))>=(3015 + 677)) and (v281==0)) then v282=0 -0 ;while true do if (((4225 -(187 + 628))>=1728) and (((3319 -(349 + 1573)) -((1726 -(938 + 365)) + 974))==v282)) then v80=v93[1 + 2 ];v91[v151 + (8 -5) ]=v153;break;end end break;end end break;end if ((v280==0) or ((1382 + 198)==3927)) then v281=0 + 0 ;v282=nil;v280=63 -(4 + 58) ;end end end elseif (((5260 -(807 + 325))>=(9354 -7281)) and (v153>=v91[v151 + (93 -(15 + 77)) ])) then local v283=0 + 0 ;local v284;while true do if (((304 + 612)<=2849) and (v283==(0 -0))) then v284=0 + 0 ;while true do if ((v284==(0 -0)) or ((1960 -(20 + 9))<=(391 + 702 + 532))) then v80=v93[3];v91[v151 + ((3717 -1913) -(628 + 304 + 869)) ]=v153;break;end end break;end end end break;end if ((v150==1) or ((4078 -2112)>=(4938 -(1052 + 483)))) then local v255=0;while true do if (((755 + 3257)>(5919 -2290)) and (v255==0)) then v153=v91[v151] + v152 ;v91[v151]=v153;v255=1 + 0 ;end if ((v255==((1091 -(143 + 72)) -(102 + 773))) or (3225<(2461 -(1157 + 91)))) then v150=250 -(182 + 66) ;break;end end end end elseif ((v94>(3 + 3)) or ((1255 -673)>(1951 + 878))) then local v191=0 -(0 + 0) ;local v192;local v193;while true do if (((5114 -(69 + 679))>(3825 -(204 + (2609 -(710 + 895))))) and (((4699 -3044) -(1233 + 421))==v191)) then while true do if ((v192==0) or (2157>=(13115 -8142))) then v193=v93[1 + 1 ];v91[v193]=v91[v193]();break;end end break;end if (((2993 -(205 + (2015 -(1718 + 178))))==(1630 + 1039)) and (v191==(0 + 0))) then v192=0 -0 ;v193=nil;v191=1092 -(961 + 79 + 51) ;end end else local v194=(0 -0) -(0 -0) ;local v195;local v196;while true do if ((3277<=(6477 -(76 + 1519))) and ((0 + 0 + 0)==v194)) then v195=0 + (1828 -(1553 + 275)) ;v196=nil;v194=2 -1 ;end if (((848 + 416)<1666) and (v194==(4 -(4 -1)))) then while true do if (((648 + 3669)>(164 + 526)) and (v195==(0 -0))) then v196=v93[816 -(504 + 310) ];v91[v196]=v91[v196](v13(v91,v196 + (2 -1) ,v93[3]));break;end end break;end end end elseif ((2136==(449 + 1687)) and (v94<=(6 + 2))) then v91[v93[1 + 1 ]]=v91[v93[228 -(113 + 112) ]];elseif (((5788 -((2746 -(421 + 770)) + 236))>3711) and (v94==9)) then local v197=0 + 0 ;local v198;local v199;local v200;local v201;local v202;local v203;while true do if ((v197==((438 -(37 + 401)) + 0)) or (791>(10247 -6414))) then v198=0 + 0 ;v199=nil;v197=2 -1 ;end if ((v197==(405 -((2072 -(185 + 1800)) + 316))) or (542>(3755 -(81 + (420 -153))))) then v202=nil;v203=nil;v197=1 + 2 ;end if (((3349 -2222)<3353) and (v197==3)) then while true do if ((1603==(693 + 910)) and ((2 -0)==v198)) then v203=nil;while true do if ((v199==(1696 -(1514 + 182))) or ((61 + 284)>=(4247 -(597 + 592)))) then local v309=0;local v310;while true do if (((0 -0)==v309) or ((14683 -10156)<(4382 -2936))) then v310=1781 -((602 -(468 + 60)) + 613 + 1094) ;while true do if ((2897==(3891 -(788 + 206))) and (v310==1)) then v199=1;break;end if ((v310==(0 -0)) or ((359 -(28 + 236))>3887)) then v200=v93[1 + 1 ];v201,v202=v88(v91[v200](v13(v91,v200 + (1398 -(1269 + 128)) ,v93[1950 -(1285 + 662) ])));v310=1 -0 ;end end break;end end end if ((v199==(450 -(284 + 164))) or ((8500 -3747)<=(4492 -(106 + 994)))) then for v325=v200,v81 do local v326=0 -0 ;local v327;while true do if (((0 + 0)==v326) or (3878<=(7061 -4387))) then v327=0 -0 ;while true do if ((v327==(0 -(1174 -(1020 + 154)))) or (3868<(92 + 3703))) then v203=v203 + (1 -0) ;v91[v325]=v201[v203];break;end end break;end end end break;end if ((1294>569) and (v199==(1 + 0))) then local v311=0 -0 ;local v312;while true do if ((v311==0) or ((5469 -(1639 + 279))>(593 + 4255))) then v312=0 + 0 + 0 ;while true do if ((v312==(0 -0)) or ((7272 -2407)==1690)) then local v355=1084 -(987 + 97) ;while true do if ((v355==(1 + 0)) or ((1038 -((235 -60) + 66 + 656))>(5080 -3385))) then v312=1 -0 ;break;end if ((822<(6492 -3416)) and (v355==(0 -0))) then v81=(v202 + v200) -(316 -(79 + 236)) ;v203=0;v355=1 -0 ;end end end if ((((3491 -2018) -600)<=(3477 -(164 + 592))) and ((1762 -(711 + 1050))==v312)) then v199=514 -(207 + 305) ;break;end end break;end end end end break;end if ((3122>(2845 -(90 + 218 + 155))) and (v198==(1270 -(916 + 353)))) then v201=nil;v202=nil;v198=2 -0 ;end if ((v198==(0 + 0)) or (2767<=(5582 -3534))) then local v291=0;while true do if ((v291==0) or ((3640 -2413)<=614)) then v199=0 + 0 ;v200=nil;v291=1;end if ((v291==(1754 -(544 + 1209))) or ((11493 -8934)<=(3164 -(116 + 363 + 860)))) then v198=1495 -(469 + 1025) ;break;end end end end break;end if (((10362 -7926)==(3272 -(203 + 633))) and (v197==(1 + 0))) then v200=nil;v201=nil;v197=187 -(26 + 159) ;end end else local v204=0;local v205;local v206;local v207;local v208;while true do if ((v204==(9 -7)) or (258>=(321 -(8 + (1012 -(288 + 691)))))) then while true do if ((v205==(1 + 0 + 0)) or ((2373 -(3399 -(362 + 1340)))==(685 + (1961 -(758 + 551))))) then v208=nil;while true do if ((4323>=((3932 -(113 + 784)) -(302 + 737))) and (v206==(1402 -(267 + 1134)))) then for v328=1 -0 , #v90 do local v329=0 -0 ;local v330;local v331;local v332;while true do if (((8510 -4021)>=(1134 + 2462)) and ((0 + 0)==v329)) then v330=0 + 0 + 0 ;v331=nil;v329=1 + 0 ;end if ((v329==(1547 -(988 + 558))) or ((9351 -4950)<(4161 -1449))) then v332=nil;while true do if ((v330==(0 + 0)) or (1242<=(1151 -(857 + 124)))) then local v361=0;while true do if (((3929 -(904 + 527))<=(14545 -10688)) and (v361==(0 -0))) then v331=256 -(158 + (164 -66)) ;v332=nil;v361=1436 -(1099 + (1920 -(723 + 861))) ;end if (((3799 -(486 + 902 + 92))<(129 + 318 + 3167)) and (v361==(917 -(70 + 846)))) then v330=244 -(216 + 27) ;break;end end end if ((v330==(1 + 0)) or ((2819 -((1449 -(843 + 196)) + 418))==(2857 -(915 + 403)))) then while true do if ((v331==0) or (1426>=(3849 -(227 + 119)))) then v332=v90[v328];for v383=1792 -(1266 + 526) , #v332 do local v384=735 -((845 -(45 + 69)) + 4) ;local v385;local v386;local v387;local v388;local v389;while true do if (((4536 -(243 + 1445))>(4265 -2104)) and (v384==0)) then v385=0 -0 ;v386=nil;v384=(4 -2) -1 ;end if ((v384==((1753 -1140) -(339 + 272))) or ((5443 -4225)>=(96 + 4010))) then v389=nil;while true do if ((v385==(2 + 0)) or ((1344 -(1142 -563))<=(1130 -(81 + 588)))) then while true do if ((2168==(7944 -5776)) and (v386==((462 + 89) -(300 + 250)))) then v389=v387[2];if ((2936<=(6077 -1870)) and (v388==v91) and (v389>=v207)) then local v401=0;local v402;while true do if (((5795 -(1233 + 563))>951) and (v401==0)) then v402=1218 -(120 + 1098) ;while true do if ((v402==(0 -0)) or ((5039 -(128 + 4))==(2858 -(935 + 137 + (1883 -(1447 + 66)))))) then v208[v389]=v388[v389];v387[1907 -(456 + 1450) ]=v208;break;end end break;end end end break;end if ((4853>(1522 + 1520)) and (v386==(0 + 0))) then local v399=0 + 0 ;local v400;while true do if (((4387 -(148 + 1638))==(4425 -(767 + 1057))) and (v399==(0 + 0 + 0))) then v400=0 -0 ;while true do if (((1363 -(1253 + 110))==v400) or ((1232 -(540 + 200))>(6780 -4969))) then local v404=0 + 0 ;while true do if (((5669 -4129)==(2414 -(144 + 730))) and (v404==(1 + 0))) then v400=1667 -(1497 + 169) ;break;end if (((16993 -12279)>(345 + 916)) and (v404==0)) then v387=v332[v383];v388=v387[1];v404=(1 -0) + (983 -(230 + 753)) ;end end end if (((1958 -(65 + (4339 -2611)))<=(509 -(71 + 37))) and (v400==(1 + 0))) then v386=2 -1 ;break;end end break;end end end end break;end if (((6125 -4490)==1635) and (v385==(166 -(39 + 127)))) then v386=0;v387=nil;v385=1 -0 ;end if (((2171 + 1813)>(3786 -(970 + 455))) and (v385==(1 + 0))) then v388=nil;v389=nil;v385=2 + 0 ;end end break;end if (((6636 -((3116 -1611) + 140))>(103 + 25)) and ((1 -0)==v384)) then v387=nil;v388=nil;v384=2;end end end break;end end break;end end break;end end end break;end if (((11925 -7821)>=((2273 -(451 + 694)) -(439 + 356))) and ((0 + 0)==v206)) then local v313=0;local v314;while true do if (((3430 -(144 + 329 + 1370))==1587) and (v313==(0 -0))) then v314=0 -(1147 -(540 + 607)) ;while true do if ((v314==(972 -(539 + 382 + 51))) or ((2451 + 1359)==(1609 -(315 + 168)))) then local v356=1905 -(1565 + 58 + 282) ;while true do if ((4457>(13537 -(16866 -7678))) and ((0 + 0)==v356)) then v207=v93[1 + 1 ];v208={};v356=1 + 0 ;end if ((v356==(1 -0)) or ((3257 -1032)<(241 + 437))) then v314=1 + 0 ;break;end end end if ((v314==(1 + 0)) or (3269<(671 + 1900))) then v206=1;break;end end break;end end end end break;end if (((1483 + 285)>=(1854 -(32 + 510))) and (v205==(0 + 0))) then local v292=0;while true do if (((839 -(543 + 128))<=(4334 -(208 + 814))) and (v292==(0 + 0))) then v206=0 -0 ;v207=nil;v292=2 -1 ;end if ((v292==1) or (4150<(2365 -(438 + 642)))) then v205=1446 -(1249 + 196) ;break;end end end end break;end if (((869 + 2833)>=1140) and (v204==0)) then v205=(0 + 0) -0 ;v206=nil;v204=2 -1 ;end if ((v204==(1302 -(951 + 350))) or ((5479 -3632)>(2715 + 224))) then v207=nil;v208=nil;v204=2;end end end elseif (((510 + 1492)==(1302 + 700)) and (v94<=(32 -16))) then if ((v94<=13) or (3238==(621 + 2007))) then if ((2708>(3817 -(1050 + 117))) and (v94<=(1049 -(690 + 348)))) then local v156=v93[1063 -(790 + 271) ];local v157=v93[1 + 3 ];local v158=v156 + (3 -1) ;local v159={v91[v156](v91[v156 + (1736 -(618 + 868 + 249)) ],v91[v158])};for v181=1,v157 do v91[v158 + v181 ]=v159[v181];end local v160=v159[(1 -0) -0 ];if ((935>(2506 -(266 + 1424))) and v160) then local v209=0;local v210;local v211;while true do if (((12679 -8127)>(4324 -1740)) and (v209==(0 -0))) then v210=0;v211=nil;v209=1;end if ((v209==1) or (3841<2887)) then while true do if (((974 + 2135)==(7919 -4810)) and (v210==(555 -(367 + 188)))) then v211=544 -(313 + (2195 -(489 + 1475))) ;while true do if (((1301 -685)<=(4425 -(16 + 22))) and (v211==(0 -0))) then v91[v158]=v160;v80=v93[9 -6 ];break;end end break;end end break;end end else v80=v80 + (29 -(27 + 1)) ;end elseif (((2412 + (6425 -3878))>(1630 + 281 + 1112)) and (v94>(5 + 7))) then v91[v93[2]]=v91[v93[3]]/v93[2 + 2 + 0 ] ;else local v213=0;local v214;local v215;local v216;local v217;local v218;while true do if ((v213==((0 -0) -0)) or ((4201 -(480 + 862))<(2371 -(209 + 14)))) then v214=0 + 0 + 0 ;v215=nil;v213=1 + 0 ;end if ((v213==(1 -0)) or ((22732 -17743)<=(3978 -(11 + 15)))) then v216=nil;v217=nil;v213=6 -4 ;end if ((((789 -(52 + 19)) + 2533)>=(387 + 1106)) and (v213==(704 -(208 + 494)))) then v218=nil;while true do if ((4458==(12473 -8015)) and (v214==(0 -0))) then local v293=1485 -(23 + 1462) ;while true do if ((v293==(495 -(72 + 423))) or (1642>=3885)) then v215=0 -0 ;v216=nil;v293=(3 -2) + 0 ;end if ((v293==(4 -3)) or (1082>=(359 + 2199))) then v214=2 -1 ;break;end end end if ((v214==(1 + 0)) or ((77 + (3903 -2094))<(1616 -1024))) then local v294=0 + (0 -0) ;while true do if ((v294==0) or ((334 + 2125)>(386 + 2287))) then v217=nil;v218=nil;v294=1 + 0 ;end if (((5885 -(4167 + 213))<2629) and (v294==(1192 -(391 + 800)))) then v214=4 -2 ;break;end end end if ((v214==2) or (1682==(2991 -(446 + (2053 -(1203 + 346)))))) then while true do if ((v215==(0 -0)) or ((4546 -(203 + 1787))==((481 + 1504) -(1293 + 31)))) then local v317=0;local v318;while true do if ((v317==(1327 -(712 + 615))) or ((6267 -4552)==(3648 -(379 + 749)))) then v318=0 + 0 ;while true do if (((1365 -(778 + 311))<=619) and (v318==((0 -0) + (0 -0)))) then v216=v86[v93[3]];v217=nil;v318=1 -0 ;end if (((2 -1)==v318) or ((1578 + 439 + 154)<376)) then v215=417 -((368 -(37 + 99)) + 184) ;break;end end break;end end end if (((4 -2)==v215) or ((6004 -(1554 + 328))<=(9120 -5423))) then for v333=1,v93[4] do local v334=0 + 0 ;local v335;local v336;while true do if (((326 + 563)<3314) and (v334==(1 -0))) then while true do if (((3787 + 288)==(5118 -(588 + 455))) and (v335==(530 -(165 + 364)))) then if ((v336[913 -(494 + 418) ]==(17 -9)) or ((954 + 27)>=(14927 -9991))) then v218[v333-(2 -1) ]={v91,v336[8 -(2 + 3) ]};else v218[v333-(963 -(915 + 47)) ]={v63,v336[1268 -(723 + 542) ]};end v90[ #v90 + 1 ]=v218;break;end if ((v335==(1900 -((3280 -(768 + 671)) + 59))) or ((1122 + 1644)==1655)) then local v363=0 -0 ;local v364;while true do if (((1370 -(467 + 484))<(3088 -(68 + 1371 + 59))) and (v363==(767 -((2207 -(1627 + 138)) + 325)))) then v364=207 -((228 -(49 + 16)) + 44) ;while true do if ((v364==(1 + 0)) or (4846<=((7730 -(503 + 281)) -2173))) then v335=2 -1 ;break;end if ((v364==(1187 -(866 + 321))) or ((3398 -(200 + 1711))==(1766 -1042))) then local v390=0;while true do if ((v390==(735 -(670 + 64))) or (2345<=(6063 -4630))) then v364=1063 -(313 + 749) ;break;end if (((7324 -2696)>(9918 -5650)) and (v390==(0 -0))) then v80=v80 + (361 -(338 + 22)) + 0 ;v336=v85[v80];v390=1;end end end end break;end end end end break;end if ((v334==0) or ((448 + 207)>(1940 -1219))) then local v348=0;while true do if (((894 + 1642)==2536) and (v348==(0 -0))) then v335=0;v336=nil;v348=1 + 0 ;end if (((946 + 522)<=(1718 + 238)) and (v348==(2 -1))) then v334=1 + 0 ;break;end end end end end v91[v93[2]]=v29(v216,v217,v64);break;end if (((2086 -(382 + 567))<(4928 -(1188 + 138))) and (v215==((2509 -(1192 + 119)) -((797 -403) + 803)))) then local v320=0;local v321;while true do if ((v320==(0 -(0 + 0))) or ((1537 -(417 + 334))>3916)) then v321=0;while true do if (((1590 -(1282 + 129 + 113 + 65))==v321) or ((72 + 1849)<=(248 + 12))) then v215=4 -2 ;break;end if (((1802 + 1113)<4167) and (((203 -(71 + 132)) + (0 -0))==v321)) then local v358=0 + 0 + 0 ;while true do if (((4505 -(208 + (1930 -949)))==(3653 -(73 + 264))) and (v358==(1632 -(410 + 1222)))) then v218={};v217=v10({},{__index=function(v371,v372)local v373=0;local v374;local v375;local v376;while true do if ((v373==((961 -(606 + 354)) + 0)) or ((3740 -2125)<=(22 -7))) then v376=nil;while true do if ((v374==(582 -(285 + 297))) or (4654<=(7585 -3950))) then local v394=0 + 0 ;while true do if (((606 -(19 + 5))<=(6384 -(5479 -(779 + 267)))) and (v394==(1804 -(1385 + 419)))) then v375=0 -0 ;v376=nil;v394=1 + 0 ;end if ((((1590 -(28 + 102)) -(1062 + (862 -(849 + 9))))<=(4968 -(830 + 563))) and (v394==1)) then v374=541 -(279 + 261) ;break;end end end if (((1736 -(663 + (1618 -(1269 + 306))))<=(4633 -(768 + 230))) and (v374==(1 -0))) then while true do if ((v375==(0 -0)) or ((2 -1)>(1599 -(458 + 885)))) then local v397=0 + 0 ;while true do if (((1339 -(380 + 523))>(83 + 59)) and (0==v397)) then v376=v218[v372];return v376[1814 -(719 + 1094) ][v376[818 -(55 + 761) ]];end end end end break;end end break;end if ((v373==(0 -(0 -0))) or (((3084 -1908) + 2644)==(148 + (2500 -(7 + 48))))) then v374=0;v375=nil;v373=2 -1 ;end end end,__newindex=function(v377,v378,v379)local v380=1776 -(6 + 1770) ;local v381;local v382;while true do if ((835<=(2394 + 906)) and (1==v380)) then while true do if (((4065 -(663 + 380))==(8521 -5499)) and (v381==(400 -(309 + (309 -218))))) then v382=v218[v378];v382[2 -1 ][v382[880 -(302 + 576) ]]=v379;break;end end break;end if ((v380==(0 -0)) or ((3356 + 1348)<=(14 + 118))) then v381=0;v382=nil;v380=1311 -((3672 -2546) + (1643 -(798 + 661))) ;end end end});v358=1 -0 ;end if (((307 -(283 + 23))==v358) or (((1702 + 5087) -2154)<(5978 -1534))) then v321=(523 -(330 + 190)) -2 ;break;end end end end break;end end end end break;end end break;end end end elseif ((v94<=(51 -37)) or ((1336 -624)>=2601)) then local v161=0;local v162;local v163;while true do if (((5945 -(949 + 340))>(6661 -(2689 + 715))) and (v161==(0 -0))) then v162=1818 -(1729 + 89) ;v163=nil;v161=1600 -(136 + 1463) ;end if (((1266 -(73 + 338))==(2587 -1732)) and (v161==((1868 -(456 + 1410)) -1))) then while true do if (((5262 -(1245 + 42))>=(4982 -(700 + 932))) and (v162==0)) then v163=v93[(1 -0) + 1 ];v91[v163]=v91[v163](v91[v163 + 1 ]);break;end end break;end end elseif ((v94>(12 + 3)) or ((7374 -5331)>=3061)) then v80=v93[3];else v91[v93[1167 -(1118 + 47) ]]= not v91[v93[3 + 0 ]];end elseif ((v94<=(706 -(345 + 342))) or ((1454 -(341 + 928))>=(2705 + 587))) then if (((9628 -5396)>(2891 -(518 + 393))) and (v94<=(6 + 11))) then local v164=0 -0 ;local v165;local v166;while true do if (((727 -(484 + 242))==v164) or ((154 + 85)>=1858)) then while true do if (((575 + 356)==(2892 -(892 + 1069))) and (v165==(651 -(28 + 623)))) then v166=v93[2];v91[v166]=v91[v166](v13(v91,v166 + 1 + 0 ,v81));break;end end break;end if ((v164==(458 -(264 + 194))) or ((3432 -(58 + 1832))==3631)) then v165=0 + 0 ;v166=nil;v164=1 -0 ;end end elseif (((11244 -7231)<=(1990 + 2210)) and (v94==18)) then if ((4984>=(852 -(389 + 157))) and (v93[1 + (1 -0) ]==v91[v93[1 + 3 ]])) then v80=v80 + 1 ;else v80=v93[3 + 0 ];end else local v221=1532 -(1326 + 206) ;local v222;local v223;local v224;while true do if ((v221==(1333 -(348 + 984))) or ((4186 -(300 + 810))>=(2432 + 1160))) then v224=nil;while true do if (((629 + 2285)<(8014 -3035)) and (v222==(1016 -(408 + 607)))) then for v303=v223 + (3 -(5 -3)) ,v93[4] do v224=v224   .. v91[v303] ;end v91[v93[7 -5 ]]=v224;break;end if (((114 + 19)==133) and (v222==0)) then v223=v93[1 + 2 ];v224=v91[v223];v222=891 -(762 + 128) ;end end break;end if (((397 + 1727 + 2810)==(19520 -14586)) and (v221==(0 -(152 -(90 + 62))))) then v222=615 -(246 + 369) ;v223=nil;v221=1683 -(860 + 822) ;end end end elseif ((v94<=(1102 -(76 + 1006))) or ((5167 -(29 + 39 + 383))<=(1766 + 823))) then v91[v93[4 -2 ]][v93[2 + 1 ]]=v93[5 -1 ];elseif ((v94>21) or ((11568 -8174)<((3141 -1717) -851))) then if ((3554>=(82 + 207)) and (v91[v93[7 -5 ]]==v93[4])) then v80=v80 + (2 -(1575 -(845 + 729))) ;else v80=v93[11 -8 ];end else v91[v93[1 + 1 ]]=v91[v93[(482 + 186) -(380 + (1651 -(816 + 550))) ]][v93[3 + (1 -0) ]];end elseif (((3400 -(1047 + 45))<=(10570 -6165)) and (v94<=(68 -34))) then if ((v94<=((244 -173) -43)) or ((2225 -(262 + 635))>=(5543 -((2896 -(1402 + 244)) + 322)))) then if (((6182 -(1270 + 123))>(5288 -(1222 + 322))) and (v94<=(14 + 5 + 6))) then if (((264 + 699)==(2592 -(813 + 816))) and (v94<=(17 + 6))) then local v169=1834 -(139 + 1695) ;local v170;local v171;while true do if ((v169==(1296 -(255 + 360 + 681))) or ((2636 -(514 + 316))<=(1481 -(743 + 616)))) then v170=0 -0 ;v171=nil;v169=2 -1 ;end if (((2240 -(54 + 646))<=(13909 -9293)) and (1==v169)) then while true do if (((2823 -1600)==(501 + 722)) and (v170==0)) then v171=v93[2];do return v91[v171](v13(v91,v171 + 1 ,v93[3]));end break;end end break;end end elseif ((((6262 -(1616 + 173)) -(764 + 297))==3412) and (v94==(38 -14))) then v91[v93[1 + 1 ]]=v93[1 + (5 -3) ]~=0 ;else v91[v93[3 -1 ]]=v91[v93[9 -6 ]] * v91[v93[7 -3 ]] ;end elseif (((2313 + 2347)>(1732 -1137)) and (v94<=(15 + 11))) then local v172=0;local v173;local v174;local v175;while true do if (((1042 + 114)<((2607 -1386) + 1593)) and (v172==(1 -0))) then v175=nil;while true do if (((3562 -(229 + 1105))>1768) and (v173==0)) then local v276=1724 -(1209 + 90 + 425) ;while true do if ((v276==(1450 -(1399 + 50))) or ((2545 -(106 + 48 + 132))<(3474 -2036))) then v173=3 -2 ;break;end if ((v276==(160 -(40 + 120))) or ((1713 -(640 + 600))>(2122 -(648 + 423 + 474)))) then v174=v93[2];v175=v91[v93[3 + 0 ]];v276=2 -1 ;end end end if ((1==v173) or ((6022 -(3651 -(178 + 29)))==((2933 -(1422 + 27)) + 776))) then v91[v174 + (829 -(467 + 361)) ]=v175;v91[v174]=v175[v93[6 -2 ]];break;end end break;end if ((v172==(0 -0)) or ((930 + 30)<(2330 -1594))) then v173=654 -(102 + 247 + 305) ;v174=nil;v172=3 -2 ;end end elseif (((377 + 2032)>(1957 -(26 + 211))) and (v94==(1325 -(1271 + 27)))) then if ((v91[v93[2 + 0 ]]==v91[v93[(256 + 372) -(24 + 600) ]]) or ((2760 -(1171 + 593))==(1444 -(218 + 102)))) then v80=v80 + (1 -0) ;else v80=v93[1777 -(851 + 923) ];end else v91[v93[2]]= -v91[v93[3]];end elseif ((v94<=((27 -16) + 20)) or (86>=(3968 -(444 + 13)))) then if (((6504 -(1316 + 506))>=(4455 -(282 + 1363))) and (v94<=(66 -37))) then v91[v93[2]]=v29(v86[v93[1091 -(1053 + 35) ]],nil,v64);elseif ((4882>=(2875 + 895)) and (v94==(19 + 11))) then v91[v93[2 -0 ]]=v91[v93[959 -(35 + 921) ]] + v93[1711 -(563 + 1144) ] ;else v91[v93[9 -7 ]]=v93[1 + 2 ];end elseif ((v94<=((1037 -(210 + 734)) -61)) or (1759>(3453 -((1947 -(483 + 1026)) + (2109 -(282 + 691)))))) then do return;end elseif ((v94>(329 -(210 + 86))) or ((3217 -1215)<=(445 -(75 + 257)))) then if (((10950 -8018)>(1705 -1116)) and  not v91[v93[2]]) then v80=v80 + 1 + 0 ;else v80=v93[(1128 + 859) -(877 + (3293 -2186)) ];end else v91[v93[6 -4 ]][v93[4 -1 ]]=v91[v93[4]];end elseif ((v94<=(99 -59)) or (3100>=(1902 + 1413))) then if (((2437 -(128 + 649))>=(2158 -(12 + 13 + 653))) and (v94<=(1665 -(958 + 670)))) then if ((v94<=35) or (3358<=(497 + 679))) then v91[v93[1707 -(961 + 714 + 30) ]]=v93[3] -v91[v93[4]] ;elseif ((v94==(13 + 23)) or ((1896 -(336 + 1273))>((4265 -(16 + 218)) + 701))) then local v235=0 -0 ;local v236;local v237;local v238;local v239;while true do if ((v235==(1 + 0)) or ((5554 -(1507 + 38))>4618)) then v238=nil;v239=nil;v235=2 + 0 ;end if (((4691 -(251 + 246))>=(593 + 1095)) and (v235==(1216 -(1037 + 177)))) then while true do if (((2766 -(71 + 87))<2681) and (v236==(1120 -(885 + 235)))) then local v298=0;while true do if (((4750 -(303 + (621 -(182 + 231))))>(1431 + 265)) and (v298==1)) then v236=1 + 0 ;break;end if (((1692 + 926)>(3487 -((3870 -2242) + 20))) and (v298==0)) then v237=v93[1 + 1 ];v238=v91[v237];v298=87 -(26 + 60) ;end end end if (((768 + 237)<(104 + 1070)) and (v236==(1 -0))) then v239=v91[v237 + (1197 -(1030 + (2025 -(1810 + 50)))) ];if (((11435 -6761)>=((3003 -(70 + 138)) + 562)) and (v239>(0 -0))) then if (((3602 -1188)>(3276 -(1362 + 444))) and (v238>v91[v237 + (1188 -(251 + 936)) ])) then v80=v93[14 -11 ];else v91[v237 + 3 ]=v238;end elseif ((((7709 -5091) -1940)>=642) and (v238<v91[v237 + 1 + 0 ])) then v80=v93[3];else v91[v237 + (626 -(528 + 95)) ]=v238;end break;end end break;end if (((142 + 20 + 43)<=((16277 -12108) -(1408 + 561))) and (v235==(0 + 0))) then v236=1922 -(1047 + 875) ;v237=nil;v235=136 -(63 + 72) ;end end else for v256=v93[3 -1 ],v93[10 -(16 -9) ] do v91[v256]=nil;end end elseif (((5383 -(91 + 956 + 246))==(9119 -5029)) and (v94<=38)) then v91[v93[2]]();elseif ((v94>(9 + 30)) or ((716 + 913)>=(4416 -(758 + 1111)))) then v91[v93[1 + 1 + 0 ]]=v63[v93[8 -5 ]];else v63[v93[4 -1 ]]=v91[v93[629 -(466 + 161) ]];end elseif ((1771<=2284) and (v94<=(113 -70))) then if ((v94<=(1001 -(243 + 717))) or (1184<(1 + 46))) then v91[v93[492 -((226 -103) + 367) ]]=v91[v93[3]] + v91[v93[4]] ;elseif ((801>=(1167 -(521 + 385))) and (v94==((1513 -(1056 + 445)) + 30))) then v91[v93[1 + 1 ]]=v64[v93[3]];else local v246=0 + (1679 -(1217 + 462)) ;local v247;local v248;while true do if ((v246==0) or ((15001 -11361)<(1260 -692))) then v247=0;v248=nil;v246=1 + (223 -(48 + 175)) ;end if ((v246==(233 -(166 + 66))) or ((865 -443)>(547 + 3866))) then while true do if ((v247==0) or ((2308 -((1497 -523) + 778))>2292)) then v248=v93[2 + 0 + 0 ];v91[v248](v13(v91,v248 + (376 -(256 + 119)) ,v81));break;end end break;end end end elseif ((v94<=(1221 -(690 + 286 + 201))) or ((833 + 194)>(2594 -(324 + 722)))) then v64[v93[3 + 0 ]]=v91[v93[417 -(194 + 221) ]];elseif ((v94>(99 -(46 + 8))) or ((925 -421)<355)) then local v249=0 -0 ;local v250;local v251;while true do if ((749==(368 + (1258 -877))) and (v249==0)) then v250=(0 -0) + 0 ;v251=nil;v249=1 + 0 ;end if (((1602 + 1125)>=(5195 -(10079 -6976))) and (v249==(699 -(133 + 565)))) then while true do if ((v250==0) or ((874 -(50 + 39))<(16 + 119))) then v251=v93[5 -3 ];do return v13(v91,v251,v81);end break;end end break;end end else v91[v93[1 + 1 ]]=v91[v93[1 + 2 + (0 -0) ]] -v93[8 -4 ] ;end v80=v80 + 1 ;break;end if (((0 + 0 + 0)==v98) or (55>(16324 -11442))) then local v124=0 + 0 ;local v125;while true do if ((v124==(1069 -(399 + 670))) or ((3645 -(296 + 736))==(5098 -2526))) then v125=(0 -0) -0 ;while true do if (((18454 -13572)==(5856 -(567 + 407))) and (v125==(1 + 0))) then v98=2 -1 ;break;end if (((5166 -(2723 + 292))<(7217 -3625)) and (v125==(0 + 0 + 0))) then local v136=242 -(83 + 159) ;while true do if ((v136==(1013 -(138 + 874))) or ((2761 + 1906)<=4280)) then v125=1 + 0 ;break;end if (((3564 -(4381 -(1755 + 107)))==(1377 -(118 + 214))) and ((1769 -(1263 + 506))==v136)) then v93=v85[v80];v94=v93[1 + 0 ];v136=1198 -(1029 + 168) ;end end end end break;end end end end break;end end break;end if ((v96==0) or (((2544 -(341 + 149)) -828)>=(2913 -(1103 + 571)))) then v97=0;v98=nil;v96=1;end end end end A,B=v27(v11(v84));if  not A[1] then local v99=v62[4][v80] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
