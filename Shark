--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v72=0;local v73;while true do if (v72==0) then v73=v2(v0(v30,16));if v19 then local v103=v5(v73,v19);v19=nil;return v103;else return v73;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v74=(v31/((1 + 1)^(v32-1)))%((1524 -(1164 + 358))^(((v33-1) -(v32-(1 + 0))) + 1 + 0)) ;return v74-(v74%(1 + (1239 -(772 + 467)))) ;else local v75=997 -((2554 -(1513 + 377)) + 333) ;local v76;while true do if (v75==0) then v76=(1 + 1)^(v32-1) ;return (((v31%(v76 + v76))>=v76) and (2 -1)) or (0 -0) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=0 -0 ;local v36;local v37;while true do if ((318 -(210 + 108))==v35) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (1333 -(158 + (2942 -1769))) ;v35=348 -(39 + 308) ;end if (v35==(1755 -((3465 -2562) + 851))) then return (v37 * (177 + 79)) + v36 ;end end end local function v23()local v38=0 -0 ;local v39;local v40;local v41;local v42;while true do if (v38==(1 + 0)) then return (v42 * 16777216) + (v41 * (298719 -233183)) + (v40 * (317 -61)) + v39 ;end if (v38==((0 -0) + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (12 -9) );v18=v18 + 4 + 0 ;v38=2 -1 ;end end end local function v24()local v43=v23();local v44=v23();local v45=195 -(186 + 8) ;local v46=(v20(v44,1758 -(442 + (2264 -(107 + 842))) ,1189 -(140 + 1029) ) * ((123 -(26 + 4 + 91))^(1488 -(507 + (2862 -(1766 + 147)))))) + v43 ;local v47=v20(v44,11 + 10 ,(99 -48) -(35 -15) );local v48=((v20(v44,1825 -((1330 -(13 + 311)) + (3114 -2327)) )==1) and  -(562 -(245 + 316))) or (183 -(94 + 88)) ;if (v47==0) then if (v46==(680 -(103 + 577))) then return v48 * (1023 -(111 + 912)) ;else local v92=431 -(156 + 275) ;while true do if (v92==(0 + 0)) then v47=2 -1 ;v45=1284 -(910 + 227 + 147) ;break;end end end elseif (v47==(481 + 1566)) then return ((v46==0) and (v48 * (1/((360 -(182 + 178)) -0)))) or (v48 * NaN) ;end return v8(v48,v47-(4617 -3594) ) * (v45 + (v46/((2 + 0)^52))) ;end local function v25(v49)local v50=0 + 0 ;local v51;local v52;while true do if (0==v50) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=1;end if (v50==(676 -(165 + 509))) then v52={};for v93=1057 -((1227 -(133 + 101)) + 63) , #v51 do v52[v93]=v2(v1(v3(v51,v93,v93)));end v50=(7 + 1) -5 ;end if (v50==((3 -1) -1)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=2;end if (v50==((12 -9) + 0)) then return v6(v52);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do local v66=0;while true do if (v66~=(2 -1)) then else if (v53==0) then local v99=1339 -(515 + 824) ;local v100;while true do if (v99==(0 -0)) then v100=0 + 0 ;while true do if (v100~=(5 -3)) then else v53=561 -(327 + 233) ;break;end if (v100==1) then v56={};v57={v54,v55,nil,v56};v100=5 -3 ;end if (v100~=(1494 -(788 + 706))) then else v54={};v55={};v100=1;end end break;end end end break;end if (v66==(0 -0)) then if (v53~=(57 -(45 + 11))) then else local v101=0;while true do if (v101~=1) then else local v104=1669 -(1662 + 7) ;while true do if (v104==0) then for v117=1,v58 do local v118=0;local v119;local v120;local v121;local v122;local v123;while true do if (v118==(2 -1)) then v121=nil;v122=nil;v118=2 -0 ;end if (v118==(0 -0)) then v119=589 -(5 + 584) ;v120=nil;v118=1;end if (v118==(4 -2)) then v123=nil;while true do if (v119~=(1 + 1)) then else while true do if (v120==1) then v123=nil;while true do if (v121~=0) then else local v253=0;local v254;local v255;while true do if (v253~=(0 + 0)) then else v254=0 -0 ;v255=nil;v253=1 -0 ;end if (v253~=(1 -0)) then else while true do if (v254==0) then v255=0;while true do if (v255==(1 -0)) then v121=1181 -(1102 + 78) ;break;end if (v255~=(709 -(469 + 240))) then else local v344=0 -0 ;while true do if (1~=v344) then else v255=1;break;end if (v344~=0) then else local v360=0;while true do if ((0 -0)==v360) then v122=v21();v123=nil;v360=2 -1 ;end if (v360~=(1 + 0)) then else v344=1;break;end end end end end end break;end end break;end end end if (v121==(1 -0)) then if (v122==(1 -0)) then v123=v21()~=(0 + 0) ;elseif (v122==(301 -(111 + 188))) then v123=v24();elseif (v122==(1 + 2)) then v123=v25();end v59[v117]=v123;break;end end break;end if (v120~=0) then else local v232=0;while true do if (v232==(902 -(813 + 89))) then v121=0;v122=nil;v232=1;end if (v232==(2 -1)) then v120=1;break;end end end end break;end if (v119~=1) then else v122=nil;v123=nil;v119=2;end if (v119~=(0 + 0)) then else local v131=0 + 0 ;while true do if (v131~=(1 + 0)) then else v119=1 + 0 ;break;end if (v131~=0) then else v120=0 -0 ;v121=nil;v131=1;end end end end break;end end end v57[3]=v21();v104=1;end if (v104~=(875 -(135 + 739))) then else v101=1 + 1 ;break;end end end if (v101==0) then v58=v23();v59={};v101=1 + 0 ;end if (v101==(1409 -(1349 + 58))) then v53=7 -5 ;break;end end end if (v53~=(1 + 1)) then else local v102=964 -(798 + 166) ;while true do if (v102==1) then for v106=1,v23() do v56[v106]=v23();end return v57;end if (v102~=(0 -0)) then else for v108=1,v23() do local v109=0;local v110;local v111;while true do if (v109==(391 -(268 + 122))) then while true do if (v110~=0) then else v111=v21();if (v20(v111,1 -0 ,1981 -(362 + 1618) )==0) then local v125=0 -0 ;local v126;local v127;local v128;local v129;local v130;while true do if (0==v125) then v126=0;v127=nil;v125=1;end if (v125~=(855 -(13 + 841))) then else v128=nil;v129=nil;v125=3 -1 ;end if (v125~=2) then else v130=nil;while true do if (v126~=2) then else while true do if (v127~=0) then else local v271=1447 -(1309 + 138) ;while true do if (v271~=1) then else v127=1;break;end if (v271==0) then local v304=0;while true do if (v304~=1) then else v271=1 -0 ;break;end if (v304==(0 -0)) then v128=v20(v111,2 + 0 ,10 -7 );v129=v20(v111,1 + 3 ,6);v304=1;end end end end end if (v127~=1) then else local v272=0 + 0 ;local v273;while true do if (v272~=(0 + 0)) then else v273=0 + 0 ;while true do if (v273~=0) then else local v339=0;while true do if (v339~=0) then else v130={v22(),v22(),nil,nil};if (v128==0) then local v366=0 -0 ;local v367;local v368;local v369;while true do if (v366~=(0 + 0)) then else v367=46 -(42 + 4) ;v368=nil;v366=1;end if (v366==1) then v369=nil;while true do if (v367==(1430 -(853 + 577))) then local v381=1594 -(677 + 917) ;while true do if (v381==0) then v368=0;v369=nil;v381=1525 -(879 + 645) ;end if (v381==(1 + 0)) then v367=1;break;end end end if (v367~=(1 -0)) then else while true do if (v368~=(0 -0)) then else v369=0;while true do if (v369~=(343 -(69 + 274))) then else v130[1088 -(465 + 620) ]=v22();v130[1450 -(1402 + 44) ]=v22();break;end end break;end end break;end end break;end end elseif (v128==(1 + 0)) then v130[3]=v23();elseif (v128==2) then v130[3 + 0 ]=v23() -((2 + 0)^(588 -(379 + 193))) ;elseif (v128~=3) then else local v382=0;local v383;while true do if (v382~=(0 -0)) then else v383=0;while true do if ((0 + 0)==v383) then v130[1 + 2 ]=v23() -((5 -3)^16) ;v130[4 + 0 ]=v22();break;end end break;end end end v339=1 -0 ;end if (v339~=(1 + 0)) then else v273=1;break;end end end if (1~=v273) then else v127=6 -4 ;break;end end break;end end end if (v127~=(2 + 0)) then else if (v20(v129,1,1220 -(1089 + 130) )==(3 -2)) then v130[2]=v59[v130[2]];end if (v20(v129,2 + 0 ,2)~=(1 + 0)) then else v130[3]=v59[v130[3]];end v127=6 -3 ;end if (v127==3) then if (v20(v129,3 + 0 ,806 -(592 + 211) )==(619 -(72 + 546))) then v130[4 + 0 ]=v59[v130[3 + 1 ]];end v54[v108]=v130;break;end end break;end if (v126==1) then v129=nil;v130=nil;v126=2;end if (0~=v126) then else local v247=568 -(470 + 98) ;while true do if (v247==1) then v126=4 -3 ;break;end if (v247==(0 + 0)) then v127=0 + 0 ;v128=nil;v247=892 -(867 + 24) ;end end end end break;end end end break;end end break;end if (v109==0) then local v124=0 -0 ;while true do if (v124==(0 -0)) then v110=1537 -(1291 + 246) ;v111=nil;v124=1;end if (v124~=(2 -1)) then else v109=1;break;end end end end end for v112=1 -0 ,v23() do v55[v112-(547 -(91 + 455)) ]=v28();end v102=4 -3 ;end end end v66=1 -0 ;end end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v77=v63;local v78=v64;local v79=v65;local v80=v27;local v81={};local v82={};local v83={};for v87=368 -((1199 -(296 + 580)) + 45) ,v70 do if ((v87>=v79) or (4333<1225)) then v81[v87-v79 ]=v69[v87 + (2 -1) ];else v83[v87]=v69[v87 + 1 ];end end local v84=(v70-v79) + 1 + 0 ;local v85;local v86;while true do local v88=0;local v89;while true do if ((v88==((2352 -(836 + 218)) -((2081 -1287) + 504))) or ((4243 -(64 + 259))<=(4102 -2295))) then v89=0 -0 ;while true do if ((v89==(0 -0)) or (3486>=(18832 -14896))) then local v105=252 -(248 + 4) ;while true do if (((2 + 5 + 93)<=(4875 -((2021 -(79 + 593)) + 491))) and (v105==(906 -(476 + (1347 -917))))) then v85=v77[v67];v86=v85[4 -3 ];v105=(3536 -(1478 + 76)) -(593 + 1388) ;end if (((14385 -11161)>2917) and (v105==(1314 -(387 + 926)))) then v89=1;break;end end end if ((((5950 -(201 + 44)) -(1010 + (1367 -(415 + 12))))>(8866 -5877)) and (v89==(1 + 0))) then if ((v86<=(40 -18)) or ((2340 -(667 + 358))>(1100 + 2607))) then if ((v86<=(3 + 7)) or ((1528 -(1416 -514))>=(321 + 4035))) then if ((v86<=(7 -3)) or ((4968 -(40 + 242))==((87 + 6067) -(549 + 57 + 900)))) then if (((5057 -(690 + 1292))<(15993 -11163)) and (v86<=1)) then if ((v86>(0 + 0)) or ((3133 -1970)>(1584 + 2716))) then do return;end else v83[v85[(1708 -(52 + 1071)) -(280 + 303) ]]=v85[3];end elseif ((v86<=(2 -0)) or (((1443 -(809 + 413)) + 2129)>(3952 -(76 + 19)))) then v83[v85[899 -(98 + 799) ]]=v83[v85[190 -(4 + (376 -193)) ]][v85[4]];elseif (((12256 -7572)>=3089) and (v86==(11 -8))) then if (((7373 -4461)==(4503 -(532 + 1059))) and (v83[v85[4 -2 ]]==v85[1454 -(868 + 582) ])) then v67=v67 + 1 ;else v67=v85[2 + 1 ];end else v83[v85[2]]={};end elseif ((v86<=(7 + 0)) or ((3840 + 5)<(2073 -(378 + 942)))) then if ((v86<=(1063 -(426 + 632))) or (339>(4595 -(692 + 364)))) then local v136=0 -0 ;local v137;while true do if (((3218 + 923)>(5335 -(1101 + 113))) and ((1582 -(398 + 1184))==v136)) then v137=v85[2];v83[v137]=v83[v137](v13(v83,v137 + (951 -(293 + 657)) ,v85[3]));break;end end elseif ((v86>(7 -1)) or (((27976 -15019) -8223)==(3653 + 1188))) then v83[v85[6 -4 ]]=v83[v85[6 -3 ]]/v85[1 + 3 ] ;else v83[v85[2]][v85[(1160 -451) -(41 + 665) ]]=v85[4];end elseif (((285 + (4608 -3431))==(943 + 519)) and (v86<=(10 -2))) then local v138=0;local v139;local v140;local v141;while true do if ((3430>(2901 -(9 + 51))) and (v138==0)) then v139=691 -(100 + 591) ;v140=nil;v138=3 -(2 -0) ;end if ((v138==(791 -(693 + 97))) or ((9 + 18)>(4375 -(1412 + 415)))) then v141=nil;while true do if (((13723 -(10529 -(254 + 310)))>=(2628 + 208)) and (v139==(0 + 0 + 0))) then v140=v85[785 -(297 + 486) ];v141=v83[v85[3]];v139=1 + 0 ;end if ((v139==(4 -3)) or ((16434 -12689)<=1465)) then v83[v140 + 1 + 0 ]=v141;v83[v140]=v141[v85[647 -(418 + 225) ]];break;end end break;end end elseif (((195 + 850)==1045) and (v86>(14 -5))) then for v235=v85[5 -3 ],v85[4 -1 ] do v83[v235]=nil;end else v83[v85[1 + 1 ]]= not v83[v85[1032 -(666 + 363) ]];end elseif ((v86<=16) or (1680>=(3413 -((4663 -3219) + 56)))) then if ((v86<=13) or ((1871 -1108)>(1426 -(256 + (25 -9))))) then if (((10871 -7067)>(6559 -3550)) and (v86<=(1 + 10))) then v83[v85[1 + 1 ]]=v61[v85[3]];elseif ((v86==(29 -17)) or ((2156 -(433 + 592))>=(2324 + 2550))) then local v174=0 + 0 + 0 ;local v175;local v176;local v177;local v178;while true do if (((54 + 2368)==2422) and (v174==(1695 -(339 + (1853 -(53 + 446)))))) then while true do if (((1063 + 1022)<=(2431 -(143 + 175))) and (v175==(926 -(706 + 218)))) then if ((v177>(1163 -(835 + 328))) or (1366>=(5456 -(259 + 313)))) then if ((v178<=v83[v176 + ((1506 -(910 + 112)) -(355 + 128)) ]) or (2916<=(1253 -832))) then local v314=0;local v315;local v316;while true do if ((2580==(199 + 2381)) and (v314==(0 + 0))) then v315=0;v316=nil;v314=1;end if (((545 + 330)<=(2291 + 1645)) and (1==v314)) then while true do if (((1376 -((1638 -1226) + 556))==(1264 -(812 + (115 -71)))) and (v315==(0 + 0))) then v316=1137 -(968 + 169) ;while true do if ((4645>=(960 + 251)) and ((1001 -(222 + 582 + 197))==v316)) then v67=v85[1 + 2 ];v83[v176 + (1942 -(1856 + 83)) ]=v178;break;end end break;end end break;end end end elseif ((v178>=v83[v176 + 1 ]) or ((6327 -(7723 -4343))<=(2143 -(130 + 1555)))) then local v317=1090 -(254 + 836) ;local v318;while true do if (((392 + 4404)>(51 + 4089)) and (v317==(0 -0))) then v318=0 -0 ;while true do if (((1109 -(80 + 294))<=(3176 -(466 + (1653 -435)))) and (v318==(0 + 0))) then v67=v85[1034 -(605 + 426) ];v83[v176 + (1070 -(578 + 489)) ]=v178;break;end end break;end end end break;end if ((v175==(1 -0)) or (2771==4656)) then v178=v83[v176] + v177 ;v83[v176]=v178;v175=1890 -(1569 + 319) ;end if ((((1598 -1249) -(106 + 243))==v175) or ((1529 + 3315)>=(2959 + 2037))) then local v276=0;while true do if (((5362 -2773)>(447 -(38 + 104))) and (v276==(1 + (0 -0)))) then v175=1;break;end if ((v276==(0 -0)) or ((6958 -3835)<707)) then v176=v85[2 + 0 ];v177=v83[v176 + (2 -0) ];v276=1839 -(1587 + 251) ;end end end end break;end if (((188 + 50)<=(5229 -1240)) and (1==v174)) then v177=nil;v178=nil;v174=2 + 0 ;end if (((20966 -16613)>(1500 + 2584)) and (v174==((1391 -(802 + 508)) -(56 + 25)))) then v175=0 -0 ;v176=nil;v174=2 -(1143 -(629 + 513)) ;end end else v83[v85[(591 + 341) -(397 + 533) ]]=v83[v85[6 -3 ]] * v83[v85[1084 -(720 + 360) ]] ;end elseif ((2178<=(1560 + 1558)) and (v86<=(23 -9))) then local v144=0 + 0 ;local v145;local v146;local v147;while true do if (((660 -(1281 -838))<(8780 -(5620 -(727 + 344)))) and (v144==(0 + 0))) then v145=0;v146=nil;v144=1 -0 ;end if (((1490 -(706 + 783))==v144) or ((246 + 144)>(3476 -2302))) then v147=nil;while true do if ((v145==(1 -0)) or (1859>(72 + 4789))) then while true do if ((v146==0) or (3447>=(1102 + 2715))) then v147=v85[1235 -(136 + 155 + 942) ];v83[v147](v13(v83,v147 + (2 -1) ,v85[858 -(527 + 57 + 271) ]));break;end end break;end if ((4946>=(501 + (7488 -5053))) and (v145==(0 + 0))) then local v262=0 + 0 ;while true do if (((1161 + 1404)>(3896 -2619)) and (v262==1)) then v145=887 -(82 + 804) ;break;end if (((1009 -608)<=3625) and (v262==(1573 -(1436 + 137)))) then v146=0 + 0 ;v147=nil;v262=1;end end end end break;end end elseif ((v86>(1925 -(128 + 1782))) or ((3646 -((1661 -(1389 + 61)) + 465))>=(5382 -(512 + 159)))) then if (((3391 -(1562 + 12))<(4265 -(1371 + 552))) and (v85[2 -0 ]==v83[v85[2 + 0 + 2 ]])) then v67=v67 + 1 + 0 ;else v67=v85[11 -8 ];end else local v180=0 + 0 ;local v181;local v182;while true do if ((v180==(0 + 0)) or ((6788 -2841)<=(184 + 1006))) then local v248=0 -0 ;while true do if ((v248==(0 + 0)) or (551>(3521 -2416))) then v181=0 -0 ;v182=nil;v248=238 -(29 + 208) ;end if (((6181 -4280)<(6332 -4416)) and (v248==1)) then v180=1 + 0 ;break;end end end if ((3459>=(2477 -((2058 -1429) + (2299 -(683 + 622))))) and (v180==(1925 -(519 + (5969 -4564))))) then while true do if (((10160 -5931)==(8794 -4565)) and ((0 -0)==v181)) then v182=v85[1889 -(1253 + 634) ];v83[v182](v13(v83,v182 + 1 + 0 ,v68));break;end end break;end end end elseif (((4775 -(14 + 37))>(10080 -6575)) and (v86<=19)) then if ((v86<=((69 + 273) -(153 + 172))) or (1501<=(673 -436))) then v62[v85[499 -(221 + 275) ]]=v83[v85[1886 -(1476 + 408) ]];elseif ((v86==(1868 -(146 + 1704))) or (2876==((20059 -7217) -8518))) then if ((4829>=2477) and v83[v85[2]]) then v67=v67 + 1 + 0 ;else v67=v85[1580 -(765 + 812) ];end elseif ( not v83[v85[1 + 1 ]] or ((5893 -(395 + 822))<=(4451 -(124 + 405)))) then v67=v67 + (2 -1) ;else v67=v85[5 -2 ];end elseif ((v86<=(9 + 11)) or ((1243 + 2226)>=(3576 + 166))) then if ((840<4144) and (v83[v85[6 -4 ]]==v83[v85[3 + 1 ]])) then v67=v67 + (3 -2) ;else v67=v85[7 -4 ];end elseif (((1399 -(620 + 248))<=(5076 -(71 + 122))) and (v86>(21 + 0))) then v83[v85[2]]=v83[v85[4 -1 ]];else local v186=v85[(552 -383) -(126 + 41) ];local v187=v85[4];local v188=v186 + 2 ;local v189={v83[v186](v83[v186 + (1 -(0 + 0)) ],v83[v188])};for v237=1,v187 do v83[v188 + v237 ]=v189[v237];end local v190=v189[1 + 0 ];if ((3533<(13647 -10002)) and v190) then local v245=0;local v246;while true do if ((2417<4175) and (v245==(0 -0))) then v246=0 + 0 ;while true do if ((v246==(0 + 0 + 0)) or ((219 + (1497 -791))<=195)) then v83[v188]=v190;v67=v85[1 + 2 + 0 ];break;end end break;end end else v67=v67 + (2 -1) ;end end elseif ((v86<=34) or (1113==(833 + 2129))) then if ((v86<=28) or ((1863 -(268 + 211))<(459 -211))) then if ((v86<=25) or ((100 + 1239)>(618 + 1521))) then if ((v86<=(580 -(151 + 406))) or ((2083 -(26 + 101))>=2031)) then local v150=0 -0 ;local v151;local v152;while true do if ((1==v150) or ((4061 -(4 + 928 + 37))<(13181 -10113))) then while true do if ((v151==(274 -(230 + 9 + 35))) or ((1791 -(810 + 837))>=1018)) then v152=v85[(866 -(22 + 11)) -(28 + 803) ];v83[v152]=v83[v152](v83[v152 + (1 -0) ]);break;end end break;end if (((749 + 3604)>(15806 -(12471 -(238 + 70)))) and ((0 -0)==v150)) then local v240=0 + 0 ;while true do if ((v240==(1 + 0)) or ((36 + 96)>=(651 + 403))) then v150=3 -2 ;break;end if (((875 + 2561)<(7319 -2799)) and (v240==(0 -0))) then v151=0 + 0 ;v152=nil;v240=710 -((148 -41) + 602) ;end end end end elseif ((((5338 -(62 + 221)) -(352 + (5007 -3976)))>(16116 -12622)) and (v86>(1111 -(1059 + 28)))) then local v191=0 -0 ;local v192;local v193;while true do if ((v191==((964 -(5 + 958)) + 0)) or ((1918 + 1094)>(4720 -(166 + 1163)))) then for v265=1, #v82 do local v266=0;local v267;local v268;local v269;while true do if (((3302 -(194 + 1412))>=((3070 -1563) -458)) and (v266==(1 + 0 + 0))) then v269=nil;while true do if ((v267==1) or ((5433 -(805 + 41))>=(1426 + 3407))) then while true do if (((945 -(184 + 260))<2059) and (v268==(0 -0))) then v269=v82[v265];for v352=0, #v269 do local v353=0 + 0 + 0 ;local v354;local v355;local v356;local v357;while true do if (((671 + 1490)>=(2896 -(392 + 33 + 364))) and ((537 -(269 + 267))==v353)) then v356=nil;v357=nil;v353=1 + 1 ;end if ((v353==(0 + 0)) or ((9656 -7319)<=256)) then v354=0 -0 ;v355=nil;v353=1 -(0 + 0) ;end if ((v353==(1171 -(326 + 843))) or ((2305 -(1291 + 270))>(1172 -(184 + 57)))) then while true do if (((6059 -3033)<=(4243 -(28 + 296))) and (v354==0)) then local v374=(0 -0) -0 ;while true do if (((4687 + 300)>=(5709 -(4022 -(359 + 159)))) and (v374==1)) then v354=1;break;end if ((v374==(0 + 0)) or ((1392 + 3591)==(3647 -1841))) then v355=v269[v352];v356=v355[2 -1 ];v374=(128 + 1455) -(1113 + 469) ;end end end if (((17579 -13184)>(5347 -(1384 + 441))) and (v354==(1 + 0))) then v357=v355[2];if (((496 -((1069 -(449 + 598)) + 33))<(3862 -2543)) and (v356==v83) and (v357>=v192)) then local v377=971 -(355 + 616) ;local v378;local v379;while true do if ((1739>=(241 + 1274)) and (v377==((2 -1) -(259 -(156 + 103))))) then while true do if (((6006 -2273)<((3537 -(78 + 66)) + 1548)) and (v378==(514 -(186 + 328)))) then v379=261 -((481 -260) + 40) ;while true do if ((2123>(1183 + 184)) and ((0 -0)==v379)) then v193[v357]=v356[v357];v355[1 + (0 -0) ]=v193;break;end end break;end end break;end if (((6316 -(501 + 1432))>=((6907 -3118) -2767)) and (v377==0)) then v378=0 + 0 ;v379=nil;v377=1951 -(1026 + 924) ;end end end break;end end break;end end end break;end end break;end if (((439 + 6 + 1459)<((16500 + 907) -13381)) and ((0 + 0)==v267)) then local v319=0 + 0 ;while true do if (((10670 -(6259 + 108))>(17936 -13871)) and (v319==(0 -0))) then v268=0 + 0 ;v269=nil;v319=1;end if (((2414 -1150)==(2558 -(307 + 987))) and ((1260 -(22 + 1237))==v319)) then v267=23 -(5 + 17) ;break;end end end end break;end if (((84 + 1650)>(602 + 26)) and (v266==(0 -0))) then v267=0;v268=nil;v266=1 + 0 ;end end end break;end if ((v191==0) or ((2835 + 247)>(810 + 3019))) then local v249=0;while true do if (((6696 -2984)>=(3181 -(1559 + 151))) and (v249==(1471 -((3377 -(1028 + 927)) + 49)))) then v192=v85[1 + 1 + 0 ];v193={};v249=1852 -(704 + (3635 -2488)) ;end if ((191<=(1008 -620)) and (v249==(1 + 0))) then v191=1 + 0 ;break;end end end end else local v194=0 + 0 ;local v195;local v196;local v197;local v198;while true do if ((v194==(1253 -(865 + 386))) or ((18251 -13311)<(944 + 1309))) then while true do if ((4065>=3928) and ((1 + 0)==v195)) then v198=nil;while true do if ((0==v196) or ((306 + 1774)<=1777)) then local v307=0 -0 ;while true do if (((238 + 228)<=2536) and (v307==(2 -1))) then v196=1;break;end if ((v307==(737 -(499 + (673 -435)))) or ((6118 -3550)>(8063 -4131))) then local v340=(2258 -854) -(359 + 1045) ;while true do if ((v340==(0 + 0 + 0)) or ((4759 -(176 + 1625))>=(6423 -1767))) then v197=v85[8 -5 ];v198=v83[v197];v340=2 -1 ;end if ((v340==(1 + 0)) or ((36 + (1256 -(79 + 1073)))>=(13558 -10349))) then v307=3 -2 ;break;end end end end end if ((v196==1) or ((2053 -(1020 + 914))>=(7831 -3145))) then for v320=v197 + (379 -(75 + 202 + 101)) ,v85[111 -(79 + 28) ] do v198=v198   .. v83[v320] ;end v83[v85[2 -0 ]]=v198;break;end end break;end if (((310 -204)==(1357 -(418 + 667 + 166))) and (v195==(1320 -(970 + 350)))) then v196=0 -0 ;v197=nil;v195=1 + 0 ;end end break;end if (((7355 -2936)<4961) and (v194==(0 -0))) then v195=0 -0 ;v196=nil;v194=1;end if (((1904 -(367 + 1536))==v194) or ((1695 -544)>=(4256 -1466))) then v197=nil;v198=nil;v194=5 -3 ;end end end elseif (((1801 -684)<(5917 -3905)) and (v86<=(38 -12))) then v83[v85[2 + 0 ]]=v29(v78[v85[4 -1 ]],nil,v62);elseif ((v86>27) or ((3942 -2236)>=(1957 + 2424))) then v83[v85[2]]=v62[v85[3]];else local v201=0;local v202;local v203;local v204;while true do if ((v201==(0 -0)) or (324>(2486 -(245 + 811)))) then v202=1035 -(137 + 898) ;v203=nil;v201=1;end if ((v201==1) or ((199 + 721 + 3012)==(807 + 740))) then v204=nil;while true do if ((v202==(1 + 0)) or ((1773 + (14271 -11052))<(615 + 10 + 238))) then while true do if ((v203==(0 + 0)) or (945<=(1402 -(310 + 791)))) then v204=v85[6 -4 ];v83[v204]=v83[v204](v13(v83,v204 + (1759 -(993 + 765)) ,v68));break;end end break;end if ((v202==(0 -0)) or (3684<=(6935 -5057))) then local v279=0 -0 ;while true do if ((v279==1) or ((4912 -(1602 + 163))>=(409 + 4506))) then v202=1752 -(1517 + 73 + 161) ;break;end if (((1234 + 2174)==(2309 + 1099)) and (v279==(0 -0))) then v203=0;v204=nil;v279=1;end end end end break;end end end elseif ((v86<=(30 + 1)) or (2971==(8677 -6429))) then if (((3593 -(92 + 1362))>=(2122 -(49 + 1694))) and (v86<=(55 -26))) then v83[v85[1 + 1 ]][v85[1355 -(1294 + (155 -97)) ]]=v83[v85[2 + 2 ]];elseif ((4667>=(4879 -(751 + 882))) and (v86>(2 + 0 + 28))) then v83[v85[1612 -(655 + 955) ]]= -v83[v85[1558 -(202 + 1353) ]];else v83[v85[2 -0 ]]=v85[67 -(58 + 6) ]~=(1489 -(1238 + (423 -172))) ;end elseif ((v86<=(51 -19)) or ((5169 -(96 + 1270))==((493 + 129) -(191 + 45)))) then v83[v85[779 -(164 + 613) ]]=v83[v85[997 -(905 + 89) ]] + v83[v85[4]] ;elseif (((880 + 2619)==(4119 -(254 + 366))) and (v86==(945 -(685 + (886 -659))))) then local v207=0 + 0 ;local v208;local v209;local v210;while true do if ((v207==((2722 -(1462 + 403)) -(197 + 659))) or ((936 + 3551)<(2288 + 1102))) then v210=nil;while true do if (((0 + 0)==v208) or ((5976 -(265 + 1636))<=((2698 -1942) -463))) then v209=0 -0 ;v210=nil;v208=341 -(175 + 165) ;end if ((((4542 -2190) -(227 + 632 + 427))<(1194 + 2374)) and (v208==1)) then while true do if ((v209==(0 -0)) or ((1845 -1400)>=1335)) then v210=v85[2 + 0 + 0 ];v83[v210](v83[v210 + 1 ]);break;end end break;end end break;end if ((274<(6820 -(3071 -1141))) and (v207==0)) then v208=0 -0 ;v209=nil;v207=1 + 0 ;end end else v83[v85[3 -1 ]]=v85[803 -(353 + 447) ] -v83[v85[4]] ;end elseif (((10189 -5828)==4361) and (v86<=(104 -64))) then if (((8366 -5409)>2091) and (v86<=(155 -(38 + 80)))) then if (((3917 -(184 + 107 + 1342))<=(4067 -(210 + 148))) and (v86<=(1962 -(1399 + (1069 -(195 + 346)))))) then local v157=0 + (1677 -(1538 + 139)) ;local v158;local v159;while true do if ((v157==(0 -0)) or ((4265 -1909)<(158 + 631))) then v158=0;v159=nil;v157=372 -(216 + 155) ;end if (((3937 -(413 + 59))>(1311 -(95 + 295))) and ((1 + 0)==v157)) then while true do if ((((2028 -(857 + 106)) + 2789)==3854) and (v158==(245 -(161 + (143 -59))))) then v159=v85[2];do return v13(v83,v159,v68);end break;end end break;end end elseif (((1450 -(407 + 324))<=(4671 -(440 + 61))) and (v86>((1998 -(808 + 1047)) -107))) then local v212=0 + 0 ;local v213;local v214;local v215;local v216;while true do if (((1136 + (1457 -849))>(3872 -2416)) and (v212==(1 + 0))) then v215=nil;v216=nil;v212=3 -1 ;end if (((613 + 216)>=(2280 -(326 + 1331))) and (((0 + 0) -0)==v212)) then v213=0 + 0 ;v214=nil;v212=1139 -(65 + 1073) ;end if ((4213>(86 + 1284)) and (v212==(2 + 0))) then while true do if ((3166==3166) and (v213==(0 + 0))) then v214=v78[v85[667 -(326 + 338) ]];v215=nil;v213=186 -(135 + 10 + 40) ;end if ((3136==(3931 -(337 + 458))) and (v213==2)) then for v288=1 + 0 ,v85[4] do local v289=0 -0 ;local v290;while true do if (((10326 -6782)>(2455 + 891)) and ((0 + 0)==v289)) then local v321=180 -(47 + 133) ;while true do if (((4009 + 211)>(2376 -1306)) and (v321==(2 -1))) then v289=2 -1 ;break;end if ((v321==0) or ((825 + 707)==((7337 -(1688 + 35)) -2909))) then v67=v67 + 1 ;v290=v77[v67];v321=4 -3 ;end end end if ((v289==((6550 -4946) -(1284 + 319))) or (1339>=4435)) then if ((2320>=(2473 -(450 + 345 + 440))) and (v290[3 -2 ]==(5 + 17))) then v216[v288-1 ]={v83,v290[4 -1 ]};else v216[v288-1 ]={v61,v290[3 + 0 ]};end v82[ #v82 + (1746 -(867 + 878)) ]=v216;break;end end end v83[v85[(14 -10) -2 ]]=v29(v214,v215,v62);break;end if (((2155 + 85)>=(6015 -3902)) and (1==v213)) then local v282=0 + 0 ;while true do if ((v282==(1540 -(1029 + 511))) or ((302 + 608)>=(3517 + 896))) then v216={};v215=v10({},{__index=function(v323,v324)local v325=0 + 0 ;local v326;local v327;while true do if ((v325==(127 -(49 + 77))) or ((1930 + 948)>(16391 -11624))) then while true do if (((1913 -747)==1166) and (v326==(0 -0))) then local v363=381 -(242 + 139) ;while true do if ((838<(3328 -((1114 -588) + 8))) and (v363==(0 + 0))) then local v373=0;while true do if ((((48923 -37601) -6884)>(1326 + 181)) and (v373==((0 + 0) -0))) then v327=v216[v324];return v327[2 -1 ][v327[9 -7 ]];end end end end end end break;end if (((563 + 1548)>=(1640 -(429 + (2692 -(169 + 1757))))) and (v325==(0 + 0))) then v326=0 -0 ;v327=nil;v325=(477 -(270 + 170)) -(12 + 24) ;end end end,__newindex=function(v328,v329,v330)local v331=0;local v332;local v333;while true do if ((3925<=(523 + (7190 -3746))) and (v331==(294 -(92 + 202)))) then local v347=322 -(235 + 87) ;while true do if ((((12960 -7405) -(1729 + 231))>=(141 + (3290 -2086))) and (1==v347)) then v331=(507 + 39) -(512 + 33) ;break;end if (((0 -0)==v347) or ((2234 + 794)<669)) then v332=(340 -169) -(71 + 100) ;v333=nil;v347=(507 + 307) -(741 + (1240 -(243 + 925))) ;end end end if ((2574>(2972 -(377 + 39 + 51))) and (v331==(1793 -(313 + 1479)))) then while true do if ((3221<=(9020 -5051)) and (v332==(45 -(15 + 30)))) then v333=v216[v329];v333[4 -3 ][v333[1 + 1 + 0 ]]=v330;break;end end break;end end end});v282=800 -(753 + 46) ;end if ((v282==(4 -3)) or ((2127 -(226 + 500))==(1515 + 1220))) then v213=2;break;end end end end break;end end else v83[v85[634 -(44 + 588) ]]=v83[v85[3 + 0 ]]%v85[1297 -((839 -(198 + 213)) + 865) ] ;end elseif (((10838 -(4173 + 1971))>=((38410 -21904) -12037)) and (v86<=((3227 -(357 + 1524)) -(109 + 1199)))) then v67=v85[3 + 0 ];elseif ((v86==(70 -31)) or ((2236 + 1451)>(2025 + 2972))) then v83[v85[1233 -(116 + 1115) ]]=v83[v85[(1770 -(75 + 1691)) -1 ]] + v85[1 + 3 ] ;else local v219=0 -0 ;local v220;local v221;local v222;while true do if ((v219==1) or (((2372 -(339 + 1297)) + 1939)<=((1240 -665) + 670))) then v222=nil;while true do if (((6177 -2968)>=(2927 + 218)) and (v220==(2 -1))) then while true do if (((1941 -(880 + 1061))==v221) or ((1253 -903)<(39 -21))) then v222=v85[2 + 0 ];do return v83[v222](v13(v83,v222 + 1 ,v85[10 -7 ]));end break;end end break;end if (((6951 -3434)>(2717 -(1083 + 121))) and ((0 -(0 + 0))==v220)) then local v283=0 + (0 -0) ;while true do if ((v283==(0 -0)) or (1966<(51 + 223))) then v221=0 + 0 ;v222=nil;v283=2 -1 ;end if ((v283==(1 -0)) or ((2490 -(674 + 1061))>=(2019 -713))) then v220=1 + 0 + 0 ;break;end end end end break;end if (((2256 -(19 + 1525))==(1976 -(8 + 1256))) and (v219==(1104 -(186 + 918)))) then v220=0 + 0 ;v221=nil;v219=3 -(9 -7) ;end end end elseif ((v86<=(109 -66)) or ((4692 -(156 + 1616))>=(6884 -(1320 + 662)))) then if ((v86<=(107 -66)) or ((4820 -(679 + (2556 -(1382 + 572))))<=(95 + 306))) then v61[v85[(283 -(219 + 56)) -5 ]]=v83[v85[2]];elseif ((1242>=(779 + 78)) and (v86>42)) then local v223=1553 -(1069 + 484) ;local v224;while true do if ((v223==(0 + 0)) or ((1569 + 524)>=4608)) then v224=v85[2];v83[v224]=v83[v224]();break;end end else v83[v85[123 -(64 + 57) ]]=v83[v85[1846 -(1271 + 572) ]] -v85[(2811 -(1539 + 251)) -(1011 + 6) ] ;end elseif (((610 + 2233)>=2436) and (v86<=(116 -(45 + 27)))) then local v163=0;local v164;local v165;local v166;local v167;local v168;while true do if (((887 + 2140)<=(655 + 2678)) and (v163==(1 + 0))) then v166=nil;v167=nil;v163=3 -1 ;end if (((217 + (6219 -3539))<(2940 + 142)) and (v163==0)) then v164=0 -(0 + 0) ;v165=nil;v163=1;end if (((11504 -(17906 -10960))>=(176 + 107)) and (v163==((696 -(597 + 95)) -2))) then v168=nil;while true do if ((v164==(2 + 0)) or ((1056 -504)==(4580 -1414))) then while true do if ((v165==(372 -(188 + 184))) or ((7 + 224)>(5304 -(1163 + 477)))) then local v291=0 -0 ;while true do if ((v291==(1 + 0)) or ((5425 -(1306 + 561))<=(2292 -(371 + 1603)))) then v165=1410 -(20 + 1389) ;break;end if (((224 + 1357)<(2858 + 1852)) and (v291==0)) then local v334=416 -(42 + 374) ;while true do if ((v334==(1921 -(1882 + 38))) or (((5110 -3780) + (2887 -(1129 + 228)))<=(3040 -1010))) then v291=132 -(37 + 94) ;break;end if ((v334==(0 -0)) or ((2033 + (4517 -2941))<(1727 -608))) then v166=v85[4 -2 ];v167=v83[v166];v334=1;end end end end end if (((1 + 0)==v165) or ((3729 -(1526 + 169))>3979)) then v168=v83[v166 + (540 -(57 + 481)) ];if (((3681 + 449)==(5831 -(675 + 1026))) and (v168>((1874 -492) -(503 + (1881 -1002))))) then if ((v167>v83[v166 + 1 + 0 ]) or ((12538 -(7751 -(107 + 30)))<657)) then v67=v85[8 -5 ];else v83[v166 + 3 ]=v167;end elseif ((v167<v83[v166 + 1 ]) or (3619<((2912 -(220 + 590)) + 363))) then v67=v85[11 -8 ];else v83[v166 + ((52 -41) -8) ]=v167;end break;end end break;end if (((5511 -1342)>=(6151 -3863)) and (v164==(945 -(208 + (1388 -651))))) then v165=0 + 0 ;v166=nil;v164=1 + 0 ;end if ((v164==(1 + (252 -(142 + 110)))) or ((1129 + 3845)<(4631 -(248 + 244)))) then v167=nil;v168=nil;v164=1288 -(217 + (2476 -(642 + 765))) ;end end break;end end elseif ((v86==(175 -130)) or ((530 -191)>((4819 -(963 + 971)) + 1564))) then local v226=0 + 0 ;local v227;local v228;local v229;local v230;local v231;while true do if (((374 + 1145)>=(2193 -(257 + 1204))) and (v226==(2 -1))) then local v252=0;while true do if (((1466 + 2852)>=(7982 -5375)) and (v252==(1 -0))) then v226=1 + 1 ;break;end if ((1301<(3395 -(229 + 1666))) and ((0 + 0)==v252)) then v229=nil;v230=nil;v252=3 -2 ;end end end if ((v226==((3756 -(1609 + 201)) -(747 + 1197))) or ((1560 + 1509 + 1390)<=(2316 -1474))) then v231=nil;while true do if (((5749 -(544 + 554))>(2461 -(53 + 15))) and ((0 + 0)==v227)) then local v284=0 -0 ;local v285;while true do if ((v284==(0 -0)) or ((2096 + 2744)<=(1017 + 30 + 763))) then v285=0 + 0 ;while true do if ((((3766 -(302 + 824)) -(357 + 44 + 57))==(3475 -(438 + 855))) and (v285==(502 -(455 + 47)))) then v228=v85[99 -(89 + 8) ];v229,v230=v80(v83[v228](v13(v83,v228 + 1 + 0 ,v85[(3 + 3) -3 ])));v285=3 -2 ;end if ((v285==1) or ((3639 -(360 + 226))<(4645 -2986))) then v227=1 + 0 ;break;end end break;end end end if (((6049 -(149 + (1350 -(17 + 197))))>=435) and (v227==2)) then for v293=v228,v68 do local v294=(1815 -(198 + 46)) -(1038 + 261 + 272) ;local v295;while true do if ((v294==((0 -0) + 0)) or ((6189 -(48 + 1733))==(16495 -12194))) then v295=0 + 0 ;while true do if ((v295==(0 + 0)) or ((1392 -(1098 + 123))>=(3151 -(316 + 34)))) then v231=v231 + 1 ;v83[v293]=v229[v231];break;end end break;end end end break;end if ((1==v227) or ((6133 -(856 + 481))==(1940 -(43 + 655)))) then local v286=0 -0 ;while true do if ((v286==(2 -1)) or (4281<(5718 -2434))) then v227=2 + 0 ;break;end if (((10297 -7448)<=(1171 + 3341)) and (v286==(0 -0))) then local v313=0 + 0 ;while true do if (((2007 -894)<=(5860 -(884 + 190))) and ((2 -(1 + 0))==v313)) then v286=941 -(291 + 649) ;break;end if ((4708>=(2520 + 650)) and (v313==(0 -0))) then v68=(v230 + v228) -(1 + 0) ;v231=0 -0 ;v313=1;end end end end end end break;end if (((2044 -(104 + 187))==(3715 -(715 + (2444 -(70 + 1127))))) and (v226==(490 -(223 + 267)))) then v227=0 -0 ;v228=nil;v226=30 -(25 + 4) ;end end else v83[v85[2 + 0 ]]();end v67=v67 + 1 ;break;end end break;end end end end A,B=v27(v11(v71));if  not A[1] then local v90=0;local v91;while true do if (v90==0) then v91=v60[4][v67] or "?" ;error("Script error at ["   .. v91   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
